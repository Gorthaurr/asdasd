// –ö—Ä–∞—Å–∏–≤—ã–π –∫–∞—Ç–∞–ª–æ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
import React, { useState, useEffect } from 'react';
import { useSelector } from 'react-redux';
import { useGetCategoriesQuery } from '../api/productsApi';
import { useCatalogUrlActions } from '../routing/useCatalogUrlActions';
import type { RootState } from '../app/store';

export default function CategoriesGrid() {
  const { setChip } = useCatalogUrlActions();
  const [isVisible, setIsVisible] = useState(false);

  // –ó–∞–ø—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API
  const { data: categories = [], isLoading, error } = useGetCategoriesQuery(undefined, {
    staleTime: 10 * 60 * 1000,
    refetchOnMount: false,
    refetchOnWindowFocus: false,
  });

  useEffect(() => {
    setIsVisible(true);
  }, []);

  // –ò–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const categoryIcons: { [key: string]: string } = {
    '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏': '‚ùÑÔ∏è',
    '–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'üåÄ',
    '–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'üçΩÔ∏è',
    '–ü–ª–∏—Ç—ã': 'üî•',
    '–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã': 'ü•ß',
    '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤—ã–µ –ø–µ—á–∏': 'üì°',
    '–í—ã—Ç—è–∂–∫–∏': 'üí®',
    '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã': '‚ùÑÔ∏è',
    '–í–æ–¥–æ–Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª–∏': 'üöø',
    '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã': 'üì∫',
    '–ù–æ—É—Ç–±—É–∫–∏': 'üíª',
    '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã': 'üì±',
    '–ü–ª–∞–Ω—à–µ—Ç—ã': 'üì±',
    '–ö–æ—Ñ–µ–º–∞—à–∏–Ω—ã': '‚òï',
    '–ë–ª–µ–Ω–¥–µ—Ä—ã': 'ü•§',
    '–ú—É–ª—å—Ç–∏–≤–∞—Ä–∫–∏': 'üç≤',
    '–ü–∞—Ä–æ–≤–∞—Ä–∫–∏': 'üçΩÔ∏è',
    '–£—Ç—é–≥–∏': 'üëî',
    '–ü—ã–ª–µ—Å–æ—Å—ã': 'üßπ',
    '–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'üåÄ',
  };

  // –¶–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const categoryColors: { [key: string]: string } = {
    '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏': 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
    '–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'linear-gradient(135deg, #06b6d4, #0891b2)',
    '–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'linear-gradient(135deg, #10b981, #059669)',
    '–ü–ª–∏—Ç—ã': 'linear-gradient(135deg, #f59e0b, #d97706)',
    '–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã': 'linear-gradient(135deg, #ef4444, #dc2626)',
    '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤—ã–µ –ø–µ—á–∏': 'linear-gradient(135deg, #8b5cf6, #7c3aed)',
    '–í—ã—Ç—è–∂–∫–∏': 'linear-gradient(135deg, #6366f1, #4f46e5)',
    '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã': 'linear-gradient(135deg, #06b6d4, #0891b2)',
    '–í–æ–¥–æ–Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª–∏': 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
    '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã': 'linear-gradient(135deg, #7c3aed, #5b21b6)',
    '–ù–æ—É—Ç–±—É–∫–∏': 'linear-gradient(135deg, #059669, #047857)',
    '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã': 'linear-gradient(135deg, #dc2626, #b91c1c)',
    '–ü–ª–∞–Ω—à–µ—Ç—ã': 'linear-gradient(135deg, #d97706, #b45309)',
    '–ö–æ—Ñ–µ–º–∞—à–∏–Ω—ã': 'linear-gradient(135deg, #92400e, #78350f)',
    '–ë–ª–µ–Ω–¥–µ—Ä—ã': 'linear-gradient(135deg, #be123c, #9f1239)',
    '–ú—É–ª—å—Ç–∏–≤–∞—Ä–∫–∏': 'linear-gradient(135deg, #c2410c, #9a3412)',
    '–ü–∞—Ä–æ–≤–∞—Ä–∫–∏': 'linear-gradient(135deg, #15803d, #166534)',
    '–£—Ç—é–≥–∏': 'linear-gradient(135deg, #a16207, #854d0e)',
    '–ü—ã–ª–µ—Å–æ—Å—ã': 'linear-gradient(135deg, #7c2d12, #9a3412)',
  };

  if (isLoading) {
    return (
      <section className="categories-section" aria-live="polite">
        <div className="loading-state">
          <div className="loading-spinner"></div>
          <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...</p>
        </div>
      </section>
    );
  }

  if (error) {
    return (
      <section className="categories-section" aria-live="polite">
        <div className="error-state">
          <div className="error-icon">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none">
              <path
                d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"
                stroke="currentColor"
                strokeWidth="1.5"
              />
            </svg>
          </div>
          <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</p>
          <small>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</small>
        </div>
      </section>
    );
  }

  return (
    <section className="categories-section" aria-live="polite">
      <div className="categories-header">
        <h2 className="categories-title">üè™ –ö–∞—Ç–∞–ª–æ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h2>
        <p className="categories-subtitle">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤</p>
      </div>

      <div className="categories-grid">
        {categories.map((category: any, index: number) => (
          <div
            key={category.id}
            className={`category-card animated-category ${isVisible ? 'visible' : ''}`}
            style={{
              animationDelay: `${index * 0.1}s`,
              background: categoryColors[category.slug] || 'linear-gradient(135deg, #374151, #1f2937)'
            }}
            onClick={() => setChip(category.slug)}
            role="button"
            tabIndex={0}
            aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.slug}`}
            onKeyDown={(e) => {
              if (e.key === 'Enter' || e.key === ' ') {
                setChip(category.slug);
              }
            }}
          >
            <div className="category-icon">
              {categoryIcons[category.slug] || 'üì¶'}
            </div>
            <div className="category-content">
              <h3 className="category-name">{category.slug}</h3>
              <p className="category-description">
                –õ—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.slug.toLowerCase()}
              </p>
            </div>
            <div className="category-arrow">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <path
                  d="M9 18l6-6-6-6"
                  stroke="currentColor"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </div>
            <div className="category-overlay"></div>
          </div>
        ))}
      </div>
    </section>
  );
}
