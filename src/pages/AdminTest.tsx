import React, { useState } from 'react';
import { adminApi } from '../api/adminApi';
import AdminLayout from '../components/admin/AdminLayout';

const AdminTest = () => {
  const [testResults, setTestResults] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);

  const addResult = (message: string) => {
    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
  };

  const testEndpoint = async (name: string, testFn: () => Promise<any>) => {
    try {
      addResult(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ${name}...`);
      const result = await testFn();
      addResult(`‚úÖ ${name} - —É—Å–ø–µ—à–Ω–æ: ${JSON.stringify(result).slice(0, 100)}...`);
    } catch (error: any) {
      addResult(`‚ùå ${name} - –æ—à–∏–±–∫–∞: ${error.message}`);
    }
  };



  const runAllTests = async () => {
    setIsLoading(true);
    setTestResults([]);
    
    try {
      // –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞
      await testEndpoint('Dashboard Stats', () => adminApi.getDashboardStats());
      
      // –¢–µ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      await testEndpoint('Products List', () => adminApi.getProducts({ page: 1, page_size: 5 }));
      
      // –¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      await testEndpoint('Categories List', () => adminApi.getCategories());
      
      // –¢–µ—Å—Ç –∑–∞–∫–∞–∑–æ–≤
      await testEndpoint('Orders List', () => adminApi.getOrders({ page: 1, page_size: 5 }));
      
      // –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      await testEndpoint('Users List', () => adminApi.getUsers({ page: 1, page_size: 5 }));
      
      addResult('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    } catch (error) {
      addResult(`üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <AdminLayout title="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Admin API">
      <div className="admin-actions">
        <button 
          className="btn btn-primary" 
          onClick={runAllTests}
          disabled={isLoading}
        >
          {isLoading ? '‚è≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º...' : 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã'}
        </button>
      </div>

      <div className="admin-content">
        <div className="test-results">
          <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:</h2>
          <div className="results-log">
            {testResults.length === 0 ? (
              <p>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å</p>
            ) : (
              testResults.map((result, index) => (
                <div 
                  key={index} 
                  className={`log-entry ${
                    result.includes('‚úÖ') ? 'success' : 
                    result.includes('‚ùå') ? 'error' : 
                    result.includes('üéâ') ? 'complete' : 'info'
                  }`}
                >
                  {result}
                </div>
              ))
            )}
          </div>
        </div>

        <div className="test-info">
          <h3>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–∞—Ö</h3>
          <ul>
            <li>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞</li>
            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤</li>
            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</li>
            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤</li>
            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
          </ul>
          <p><strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –î–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.</p>
        </div>
      </div>
    </AdminLayout>
  );
};

export default AdminTest;
