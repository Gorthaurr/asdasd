name: Deploy Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'vite.config.*'
      - 'tsconfig*.json'
      - 'src/**'
      - 'public/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

concurrency:
  group: deploy-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      # Устанавливаем pnpm гарантированно
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          standalone: true
          run_install: false

      # Fallback на npm -g, если pnpm не найден (редко, но спасает CI)
      - name: Ensure pnpm is available
        shell: bash
        run: |
          if ! command -v pnpm >/dev/null 2>&1; then
            echo "pnpm not found, installing via npm -g..."
            npm install -g pnpm@10.17.1
          fi
          echo "Node: $(node -v)"
          echo "pnpm: $(pnpm -v)"

      - name: Install dependencies (locked)
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        env:
          VITE_API_URL: https://api.technofame.store
        run: pnpm run build

      - name: Upload dist via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/**"
          target: "/home/${{ secrets.SSH_USER }}/frontend_upload"
          overwrite: true
          strip_components: 1

      - name: Atomic deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo -n /opt/deploy/deploy_frontend.sh
