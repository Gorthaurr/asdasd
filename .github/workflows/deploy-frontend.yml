name: Deploy Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'vite.config.*'
      - '.github/workflows/deploy-frontend.yml'

defaults:
  run:
    shell: bash

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # УСТАНОВКА PNPM «ВРУЧНУЮ» + ДОБАВЛЕНИЕ В PATH
      - name: Install pnpm (standalone) and add to PATH
        run: |
          set -euxo pipefail
          curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=10.17.1 sh -
          # PNPM_HOME по умолчанию: $HOME/.local/share/pnpm
          echo "$HOME/.local/share/pnpm" >> "$GITHUB_PATH"
          # На всякий случай добавим и /usr/local/bin (если npm -g туда кладёт)
          echo "/usr/local/bin" >> "$GITHUB_PATH"
          hash -r
          echo "PATH=$PATH"
          which pnpm || true
          pnpm -v || true
          node -v

      - name: Create .env.production
        run: |
          printf "VITE_API_URL=https://api.technofame.store\n" > .env.production
          printf "REACT_APP_API_URL=https://api.technofame.store\n" >> .env.production
          printf "NEXT_PUBLIC_API_URL=https://api.technofame.store\n" >> .env.production

      - name: Install deps
        run: |
          pnpm install --frozen-lockfile || pnpm install

      - name: Build
        run: pnpm run build

      - name: Upload dist to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/*"
          target: "/var/www/frontend_tmp"

      - name: Activate new build
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euxo pipefail
            sudo mkdir -p /var/www/frontend /var/www/frontend_tmp
            if command -v rsync >/dev/null 2>&1; then
              sudo rsync -a --delete /var/www/frontend_tmp/ /var/www/frontend/
              sudo rm -rf /var/www/frontend_tmp/*
            else
              sudo rm -rf /var/www/frontend/*
              sudo cp -a /var/www/frontend_tmp/. /var/www/frontend/
              sudo rm -rf /var/www/frontend_tmp/*
            fi
            sudo chown -R www-data:www-data /var/www/frontend
            sudo systemctl reload caddy || true
