name: Deploy Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'vite.config.*'
      - 'tsconfig*.json'
      - 'src/**'
      - 'public/**'
      - '.github/workflows/deploy-frontend.yml'

concurrency:
  group: deploy-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.17.1 --activate
          pnpm -v

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # если у тебя есть pnpm-lock.yaml — оставляем --frozen-lockfile
      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build
        env:
          VITE_API_URL: https://api.technofame.store
        run: pnpm run build

      # подчистим и создадим целевую папку выгрузки на сервере (под пользователем deploy)
      - name: Prepare upload dir on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            rm -rf "/home/${USER}/frontend_upload"
            mkdir -p "/home/${USER}/frontend_upload"

      - name: Upload dist via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}     # deploy
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/**"
          target: "/home/${{ secrets.SSH_USER }}/frontend_upload"
          overwrite: true
          strip_components: 0

      # атомарный деплой + проверка, что сайт реально отдается с Caddy
      - name: Atomic deploy & health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}     # deploy
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail
            # сам деплой (скрипт уже настроен с sudo NOPASSWD)
            sudo -n /opt/deploy/deploy_frontend.sh

            # базовые проверки содержимого
            test -f /var/www/frontend/index.html || { echo "index.html missing"; exit 1; }
            ls -la /var/www/frontend | head -n 50 || true

            # health-check Caddy
            code=$(curl -ks -o /dev/null -w "%{http_code}" https://technofame.store/)
            if [ "$code" != "200" ] && [ "$code" != "304" ]; then
              echo "Unexpected HTTP status: $code"
              sudo systemctl status caddy --no-pager || true
              sudo journalctl -u caddy -n 120 --no-pager || true
              # покажем первые строки index.html для диагностики
              sed -n '1,60p' /var/www/frontend/index.html || true
              exit 1
            fi

            echo "Frontend OK (HTTP $code)"
